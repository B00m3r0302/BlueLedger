version: '3.8'

# Bridge network for server and database
x-bridge-config: &bridge-config
  driver: bridge

# Macvlan network for victim to get real router DHCP IP
x-macvlan-config: &macvlan-config
  driver: macvlan
  driver_opts:
    parent: ${NETWORK_INTERFACE:-eth0}
  ipam:
    config:
      - subnet: ${NETWORK_SUBNET:-192.168.1.0/24}
        gateway: ${NETWORK_GATEWAY:-192.168.1.1}

services:
  # Network auto-configuration service - runs first  
  network-setup:
    image: alpine:latest
    container_name: ssl_lab_network_config
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      sh -c "
        echo 'üåê SSL Stripping Lab - Network config...'
        echo '‚ö†Ô∏è  Please run ./setup-macvlan.sh on the host first!'
        echo '‚úÖ Checking for .env file...'
        if [ -f .env ]; then
          echo '‚úÖ Network configuration found!'
        else
          echo '‚ùå No .env file found. Run ./setup-macvlan.sh first!'
          exit 1
        fi
      "

  # MongoDB database
  mongodb:
    image: mongo:7
    container_name: blueledger_mongodb
    restart: unless-stopped
    networks:
      - bridge_network
    environment:
      - MONGO_INITDB_DATABASE=blueledger
    depends_on:
      network-setup:
        condition: service_completed_successfully

  # BlueLedger server - uses bridge network, accessible via host ports
  blueledger-server:
    build:
      context: .
      dockerfile: ssl-stripping-lab/containers/server_victim/ubuntu_server/Dockerfile
    container_name: blueledger_server
    restart: unless-stopped
    networks:
      - bridge_network
    ports:
      - "3000:3000"  # Frontend
      - "5000:5000"  # HTTP API
      - "5001:5001"  # HTTPS API
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    environment:
      - BLUELEDGER_PATH=/opt/BlueLedger
      - MONGODB_URI=mongodb://blueledger_mongodb:27017/blueledger
      - JWT_SECRET=your-super-secure-jwt-secret-key-change-in-production
      - JWT_EXPIRE=24h
      - NODE_ENV=development
      - SEED_DATABASE=true
      - BCRYPT_ROUNDS=12
      - PORT=5000
      - HTTPS_PORT=5001
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      mongodb:
        condition: service_started
      network-setup:
        condition: service_completed_successfully

  # Victim simulator - gets real DHCP IP from router (different from host)
  ssl-victim:
    build:
      context: ./ssl-stripping-lab/containers/server_victim/debian_victim
      dockerfile: Dockerfile
    container_name: ssl_victim
    restart: unless-stopped
    networks:
      - macvlan_network
    depends_on:
      blueledger-server:
        condition: service_started
      network-setup:
        condition: service_completed_successfully
    environment:
      - TARGET_SERVER_IP=auto
    command: ["python3", "/opt/victim_simulator.py"]



networks:
  # Bridge network for server and database
  bridge_network:
    <<: *bridge-config

  # Macvlan network for victim to get real router IP
  macvlan_network:
    <<: *macvlan-config